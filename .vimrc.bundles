set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" plugin on GitHub repo
Plugin 'easymotion/vim-easymotion'
" Plugin 'skywind3000/vim-keysound'
Plugin 'itchyny/calendar.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'christoomey/vim-run-interactive'
Plugin 'Valloric/YouCompleteMe'
Plugin 'croaky/vim-colors-github'
Plugin 'danro/rename.vim'
Plugin 'majutsushi/tagbar'
Plugin 'kchmck/vim-coffee-script'
Plugin 'kien/ctrlp.vim'
Plugin 'pbrisbin/vim-mkdir'
Plugin 'scrooloose/syntastic'
Plugin 'slim-template/vim-slim'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'mattn/emmet-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Lokaltog/vim-powerline'
Plugin 'godlygeek/tabular'
Plugin 'msanders/snipmate.vim'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'altercation/vim-colors-solarized'
Plugin 'othree/html5.vim'
Plugin 'xsbeats/vim-blade'
Plugin 'Raimondi/delimitMate'
Plugin 'groenewege/vim-less'
Plugin 'rhowardiv/nginx-vim-syntax'
Plugin 'tomasr/molokai'
Plugin 'klen/python-mode'
Plugin 'lervag/vimtex'
Plug 'ojroques/vim-oscyank'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'tComment'
Plugin 'matchit.zip'
Plugin 'ctags.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
" let g:keysound_enable = 1
" let g:keysound_theme = 'typewriter'
" Prevent that vim detect a file with the tex suffix as a plaintex
let g:tex_flavor='latex'
"Set the latexmk engines
let g:vimtex_compiler_latexmk_engines = {
            \ '_'                : '-xelatex',
	    \ 'pdflatex'         : '-pdf',
	    \ 'dvipdfex'         : '-pdfdvi',
	    \ 'lualatex'         : '-lualate',
	    \ 'xelatex'          : '-xelatex',
	    \ 'context (pdftex)' : '-pdf -pdflatex=texexec',
	    \ 'context (luatex)' : '-pdf -pdflatex=context',
	    \ 'context (xetex)'  : '-pdf -pdflatex="texexec --xtx"'
            \}
" Set the viewer
"let g:vimtex_view_general_viewer = 'qpdfview'
let g:vimtex_view_method = 'zathura'
" Set the formattool
let g:vimtex_format_enabled=1
let g:vimtex_indent_bib_enabled=1
" Tabular enable
let g:tabular_loaded = 1
"Set easymotion
let g:EasyMotion_do_mapping = 0 " Disable default mappings

" Jump to anywhere you want with minimal keystrokes, with just one key
" binding.
" " `s{char}{label}`
nmap s <Plug>(easymotion-overwin-f)
" " or
" " `s{char}{char}{label}`
" " Need one more keystroke, but on average, it may be more comfortable.
nmap s <Plug>(easymotion-overwin-f2)
"
" " Turn on case-insensitive feature
let g:EasyMotion_smartcase = 1
"
" " JK motions: Line motions
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)"
filetype plugin indent on
syntax enable
